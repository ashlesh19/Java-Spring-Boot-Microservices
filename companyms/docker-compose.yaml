services:
  postgres:
    image: postgres:latest
    container_name: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /data/postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres:/data/postgres
    networks:
      - postgres

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin:/var/lib/pgadmin
    networks:
      - postgres

  zipkin:
    container_name: zipkin
    image: openzipkin/zipkin
    ports:
      - "9411:9411"
    networks:
      - microservice-network
      - postgres

  rabbitmq:
    image: "rabbitmq:3-management"
    container_name: rabbitmq
    ports:
      - "5672:5672"  # RabbitMQ
      - "15672:15672"  # RabbitMQ management UI
    networks:
      - microservice-network
      - postgres

  servicereg:
    image: ashlesh1910/servicereg:latest
    container_name: servicereg
    ports:
      - "8761:8761"  # Expose Eureka server port
    depends_on:
      - rabbitmq
      - zipkin
      - postgres
      - pgadmin
    networks:
      - microservice-network
      - postgres

  config-server-ms:
    image: ashlesh1910/config-server-ms:latest
    container_name: config-server-ms
    ports:
      - "8080:8080"  # Expose Config Server port
    depends_on:
      - servicereg
    networks:
    - microservice-network
    - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  gateway-ms:
    image: ashlesh1910/gateway-ms:latest
    container_name: gateway-ms
    ports:
      - "8084:8084"
    depends_on:
      - servicereg
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  jobms:
    image: ashlesh1910/jobms:latest
    container_name: job
    ports:
       - "8082:8082"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://servicereg:8761/eureka/

  companyms:
    image: ashlesh1910/companyms:latest
    container_name: company
    ports:
      - "8081:8081"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

  reviewms:
    image:  ashlesh1910/reviewms:latest
    container_name: review
    ports:
      - "8083:8083"
    depends_on:
      - servicereg
      - config-server-ms
    networks:
      - microservice-network
      - postgres
    environment:
      - SPRING_PROFILES_ACTIVE=docker

networks:
  microservice-network:
    driver: bridge
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin: